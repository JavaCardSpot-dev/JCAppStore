#H_ hint
#W_ warning
#E_ error

loading_opts = Loading options...
detect_cards = Detecting cards...
failed_detect = Failed to load card.
lanuch = Creating window...
card_refresh = RELOAD CARD
no_reader = No card reader detected.
no_channel = Cannot detect card channel. Raise issue on our github repo.
E_fail_to_detect_sd = Could not detect Security Domain. The card is probably locked or otherwise inaccessible.
no_card = No card in selected reader.
missing_card = Insert card to proceed.
send_APDU_to = Send command (APDU) to 
E_unkown = Unknown error has occurred.
search_SW = For more info, search 'SW
packages = packages
applets = applets
applet_name = Applet name: 
sds = security domains
cause = Cause:
pkg_id = Package ID:
filter = FILTER
aid = AID: 
delete = Delete 
CAP_delete_applet = DELETE APPLET 
delete_anyway = Delete anyway
applet_uninstall = This action will uninstall an applet that 
CAP_install = INSTALL
CAP_reinstall = REINSTALL
install = Install
failed_to_reload = Card reload failed
may_contain = may contain 
contains = contains
enable_hints = Enable hints 
enable_verbose = Verbose mode 
enable_jcmemory = Keep JCMemory 
version = Version: 
type = Type: 
sd_assigned = Domain assigned: 
reporter=JCAppStore bug reporter
working=working...
failed_to_list_aps=Failed to load installed applets. Please, try again. If problem persists, contact us.
card_info = Card information
card_busy=Card busy
card_busy_desc=Card is currently busy. Try again in a while.
E_background=Failed to update background. The image does not exists or the app cannot read it.
E_invalid_version=No version to install chosen.
E_invalid_compiler=No compiler version chosen.
E_invalid_install_params = Invalid parameters for installation - either even length or too much data.
W_installed = This applet is already installed on the card. Keep the force option checked.
info = Notice
no_file_signature = Could not verify the signature. File is missing.
wrong_signature_method = Signing failed - invalid signature method.
no_pgp_path = GnuPG path is missing. Fill in GPG installation path in settings. The store should \
  be able to find the GPG automatically, if you installed the application to the default folder.
no_pgp = Signature failed: GnuPG not found. Did you provide correct path in settings?
signature_aborted = Couldn't finish verifying the file signature.
custom_file = <b>Warning</b>: the file integrity was not checked. Either you trust this file, or verify its authenticity \
  by specifying detached signature file in Advanced settings.
custom_signature = You are about to install this custom cap file. But, are you sure you have the original file? \
  Verify the file integrity to ensure the software is genuine. First make sure you have the developer's key \
  imported. If not, first go to File - Import PGP key. Then locate the detached signature below and verify the integrity.
custom_sig_loc = select the signature file...
# todo remove in eng as it is in eng -->
E_aid_present_on_card = "WARNING: Applet already present on card: AID "
unable_to_translate = Unable to translate following error.
reader_avail = Available card reader
W_ = Warning
W_store_loading = Loading failed: no data found. Please try it again.
waiting_internet = Waiting for internet connection...
downloading = Downloading 

E_store_generic = Unknown error. Please try again.
E_store_timeout = Loading timeout. Your internet connection or the github.com server is unavailable.
E_no_internet = No connection found.
unzip = Unzipping...

# hint applet usage
au_title = How to use applets
au_introduction = Once you install the applet, you need to use it somehow. The way the applet communicates with the computer \
  is through APDU messages (for more info check our documentation). It basically sends array of numbers with defined \
  meaning. To communicate with installed applet, you need to have either host-side application written for the applet \
  or general software that allows you to sent the APDU messages yourself.
au_host_title = Host application
au_host = If you are lucky, the host application is already written and all you have to do is visit the developer's \
  webpage and install it. The application may be with GUI like this store, then it will be intuitive. Or, the host app \
  may be for command line only. Then, you need to run the application from the command line. For command line usage, \
  see Command Line section of our help. The cmd version may be a bit harder to use, especialy for non-developers. \
  However, you don't need to send the APDU messages manually and that is the main advantage.
au_no_host_title = General APDU software
au_no_host = If the host application doesn't exist, you need to download either GPShell or GlobalPlatformPro tools and \
  install them. You need to learn how to use them so that you can send the APDU messages to specific applet on card. \
  Also, you need to learn the APDU structure and the way the developer uses it so you are able to actually communicate \
  with the card. If you are unable to install the applet using GPShell or GPPro (e.g. without this store), and not \
  willing to lear a lot of things, do not install such applets.

# hint cmd usage
cmd_title = Command Line swift guide
cmd_introduction = Command line is the native way how to control any digital device. Graphical interface is only an \
  feature to ease the application usage, though today very common. Some applications do not have GUI, and therefore \
  you need to know how to use command line.
cmd_browse_title = Browsing the device
cmd_browse = First thing you need to do is to learn how to navigate. Next to the cursor is usually displayed your \
  current position in the directory tree structure.<br>Use command <b>cd</b> to change directory. To go into hello \
  directory, use <b>cd hello</b>. But, the hello folder has to exist inside your current folder. To go up, use <b>cd ..</b>, \
  where two dots mean parent folder. To ease the file and firectory name typing, use TAB key to fill the rest of the folder \
  name. For example, instead of typing 'hello', type 'he' only and press TAB. The computer will fill in 'hello' if such folder \
  exists, or 'hella' for example, because 'hella' folder also exists and 'a' is before 'o' in alphabet. In such case, press TAB again. \
  <br>To show content of your current directory, use <b>ls</b> command on linux, or <b>dir</b> command on windows.\
  <br><br> IMPORTANT: as you may have noticed the commands are separated by spaces. Thus, space in foldername is a problem.\
  To avoid it, enclose such folernames in " or ' characters.
cmd_launch_linux_title = Start an application - Linux
cmd_launch_linux = To start a host app, easiest way for beginners it to navigate to the directory the app is in. \
  Use <b>ls -l</b> to display the file properties. \
  If desired file contains 'x' in the permissions, then it should be ok and all you need to do is to type the filename \
  along with its extension as any other command. In case the application doesn't run, type './[appname].[extension]' instead.
cmd_launch_win_title = Start an application - Windows
cmd_launch_win = To start a host app, easiest way for beginners it to navigate to the directory the app is in. \
  Then see the file extension using dir command. If it's an 'exe' file, then it should be ok and all \
  you need to do is to type the filename along with its extension as any other command, for example myapp.exe.
cmd_lanuch_Java_title = Start Java application (.jar)
cmd_lanuch_Java = The host applications are mostly written in Java, because the card runs Java. So writing the host application \
  in Java too makes sense. To launch Java application, you need to download JRE if you don't have it already. JRE stands for \
  Java Runtime Environment and it's a software that can run the Java application. Once you have this installed, and you \
  are in a folder the .jar file is, run following command: <b> java -jar TheAppFileName.jar </b> where you need to fill in \
  the correct app file name. In case the 'java' command is not found, make sure that the JRE install folder location is \
  in your Path environment variable. This should be done automatically during install though.

#hint master key
mk_title = Card master authentication
mk_intro = The card is protected by master key. This value is set to the card by vendor, usually 4041...4E4F. However, \
  some vendors may use unique test keys or you've changed the master key, and thus we can't load the card contents. \
  The key might consist of 3 parts (called mac, enc, dec) or it can be one single long string. We support only one string \
  master key. To get one key from the three parts, ask your card vendor.
mk_title_ini = Providing the correct key
mk_ini = To load such card, provide the application with correct key value. You have to modify cards.ini file inside \
  JCAppStore folder located in your user folder (Documents in windows for example). Once here, modify two values under correct \
  card identifier header. This may be problem if you plugged in more than once card, because there is metadata of every card \
  that was plugged in while running store. If you don't know the id of card, try to re-plug the card onto application to display it. Find the \
  correct block with the data of the card you cannot connect to, and set key to the correct value. Set auth = true so that \
  the store will try to authenticate.

#  left menu -->
my_card = My card
app_store = Applet Store
search = Search...

# reporter -->
unknown_error=Unknown error occurred.
send=Send
send_not=Don't send
attachment=attach log info to help us identify the problem
attachment_desc=An unknown error has occurred and the application has been terminated. In order to resolve the issue, \
  please notify us. To do so, describe the action that led to the error and attach the log file which will tell us what \
  exactly was the problem source.

# store -->
website = Website
author = Author: 
custom_install = Custom installation
H_custom_install = Choose specific version and SDK to install.
custom_version = Version
H_custom_version = Version to install. Install older version\nonly if required by compatibility with host app.
custom_sdk = sdk
sdk_version = SDK version: 
H_custom_sdk = Setup development kit used for the version\nchosen to install. SDK is a tool bundle for\ncard \
  development, install sdk version which\n is supported by your card.
H_website = We strongly recommend to visit the project\nwebpage to get more detailed info.
use = Use
H_use = Installation and use guide. More info\non the website.
W_no_host_app = This applet has no host application and requires advanced skills to use. For more info see Help section \
  about applet use.
no_support_yet = Not supported yet.

#  main menu -->
readers = Readers
help = Help
file = File
quit = Quit 
H_quit = exit the application
cmd = CommandLine guide
H_cmd = how to use command line
applet_usage = Using the installed applet
auth = Card authentication
H_auth = key management in appstore
gpg = GnuPG: file signatures
H_gpg = verifying the sourcecode authors
H_applet_usage = how to use installed applets

install_info_failed = Failed to save the applet data. The applet will be installed, but the app will not recognize it\
   as its applet.
installed = Applet successfully installed.
install_failed = Installation failed
memory_failed = Installation memory check failed
memory_failed_text = Before installing, an attempt to compute free space failed: could not install auxiliary applet \
  to obtain card memory size. Make sure the applet is not missing: 
no_file = Unable to load applet source file. Make sure the file is valid.
memory_could_not_obtain = Failed to obtain the card memory info.
card_free_memory = Free persistent memory:
delete_failed = Deletion failed
#  utils -->
failed = Failed.
done = Done.
retry = retry
no_results = No results found.
settings = Settings
ok = OK
cancel = Cancel
no_last_card = No card inserted since app started.
background = Background
change = Change
default = default
no_install_file = Installation file not found. Please, refresh the store.
reset_default = Restore default
language = Language
reset_to_apply = Changes will apply after an restart.
reset_to_apply_title = Change event notification
blur = Blur amount:
unknown = unknown
image_limit = Images (png, jpeg/jpg, bmp) less than 1.5 MB
key_file_limit = Public key files (.asc)
event = Event
CAP_install_applet = INSTALL APPLET 
from_pc = from this PC
cap_files = Card applet files (.cap)
W_do_not_unplug = Do not unplug the card during the install process. Following package and its chosen \
  applet will be installed:
advanced_settings = Advanced settings
install_params = \tinstallation parameters: 
H_install_params = Some applets may require additional information during installation. Check the applet use guide.
force_install = force installation
H_force_install = Will re-install the applet even if present on a card. In \
  case the match is found, the previous package and its applets are removed.
applet_ids = \tapplet IDs: 
H_default_aid = We recommend not to modify default AIDs. Choose the applet to install if multiple displayed. \
  Warning: AID must have IN TOTAL between 10 and 32 chars.
management = Management
uninstall = uninstall
H_uninstall_apk = Uninstall applet.\n The package will remain\non the card.
H_uninstall_pkg = Delete package.\n The applet originated\nfrom this package\nwill be uninstalled.
custom_command = custom command
H_advanced_syntax = Length must be even. Valid characters are only 0..9A..F
I_use_default_keys_1 = <p>We don't know this card type. Do you want to try these widely used ones?</p>
I_use_default_keys_2 = <p>We recommend doing this only once. The card gets irreversibly blocked after several \
  (around 10) incorrect tries.</p>
signature_title_dialog = File signature
custom_sign_button = Search for detached signature file....
install_ask = Continue to install?
H_custom_sign = Specify detached signature file for PGP. The key must be present in your keyring. If not specified, the \
  signature will not be verified.
master_key = master key
key_type = key type
key_not_found = Default test key not found
pgp_loc = GnuPG install
pgp_key_loc = Public key location
H_pgp_loc = or specify the GnuPG executable path here
H_pgp_loading = Verifying the signature...
get_memory = Card memory info
pgp_specify_loc = search for GnuPG
wait_sec = Working...
H_verified_not_trusted = Warning: the key used for this signature is not trusted ultimately.
H_verified_no_author = The signature was verified.
H_verified = The integrity of this release was signed by
H_not_verified = Integrity of this\n\
  version was not verified. It is not safe to install this version. Either try to re-download the store or try to install \
  different version or sdk.
H_no_pgp = Specify the GnuPG executable path in Settings to enable integrity verification.
H_gpg_loading = Verifying the release integrity...
H_verify_failed = Failed to verify the file integrity. Cause:\n
H_thread_failed = Unknown. Try to reopen the page.
H_no_file_pgp = The file for signature was not found. To verify the signature, try to re-download the store.
import = Import

#<string id="145"><b>Warning:</b> do not unplug the card during the deletion process. Following package and all its applet instances will be removed:
chbox_force_delete = force deletion
chbox_force_delete_expl = Will delete all dependencies of the chosen applet.
W_personal_data = personal data (e.g. security keys). All data will be completely and irreversibly deleted.

# exceptions-->
E_install_no_file_1 = Installation error: file 
E_install_no_file_2 = doesn't exist.
E_image = Image error: failed to read the given image. Using default background instead.
E_install_invalid_data = Installation aborted: invalid installation data or applet AID if modified.
E_delete_invalid_data = Installation aborted: invalid deletion data.
E_delete_sd = Unable to delete security domain.
E_no_applets_file = The list of installed applets for this card from this store is missing.
E_serialize_applets = The applet details failed to save. The applets will work but won't be recognized as known.
E_deserialize_applets = The applet details cannot be loaded. The applets will work but won't be recognized as known.
E_load_card = The card cannot be loaded. Please, contact us to solve the problem.
E_card_details_failed = Unable to save card details. The card won't be recognized as known card.
E_missing_types = The card types database has been deleted. Download new one from our github repo.
E_loading_failed = Card loading failed
E_unknown_error = Unknown error occurred. This usually means that card is somehow broken.
E_no_aid_on_card = Deletion failed: no such AID on card. Try to re-insert the card to get actual information about the \
  content.
E_delete_not_allowed = Deletion failed: not allowed. The applet is still possibly active. Try to uninstall the applet first.
E_connect_fail = Filed to connect to selected reader. Try again or contact us for help.

# SW translations ! THESE ARE USED BUT PASSED AS ARGS SO THE BUNDLE DOESN'T SEE USAGE-->
E_invalid_INS = Invalid instruction for execution. This means that command for the card sent is not supported. \
  For more info, search 'APDU invalid INStruction' or 'SW 0x6D00'.
E_invalid_CLA = Invalid instruction class for execution. This means that command for the card sent is not supported. \
  For more info, search 'APDU invalid CLA' or 'SW 0x6E00'.
E_invalid_P1P2 = Invalid instruction parameters P1 or P2 for execution. This means that the requested action requires \
  different parameters to be sent. For more info, search 'APDU invalid P1P2' or 'SW 0x6A86'.
E_invalid_LC = Invalid Lc byte for outcoming data length. The applet was expected to return different data length.
E_invalid_memory = Fatal error: memory management failed during process. For more info, search 'SW 0x6581'.
E_full_memory = Memory is full. Uninstall some applets to free some space. For more info, search 'SW 0x6A84'.
E_invalid_data = Incorrect data sent. Check the format, length, typos, card support - JC version, packages, sizes. \
  For more info, search 'SW 0x6A80'.
E_security_failure = Security status not satisfied. The action was not considered secured and thus aborted. \
  For more info, search 'SW 0x6982'.
E_use_failure = Incorrect applet use. For installing: missing install params / wrong sdk version not enough RAM or \
  persistent memory. Try to find which sdk is supported by your card and install applet with such sdk, or check applet \
  info if the installation requires parameters. If nothing helps, try to uninstall some applets to free space.
E_pkg_not_found = Applet or package not found. For more info, search 'SW 0x6A82'.
E_data_not_found = Referenced data not found. For more info, search 'SW 0x6982'.
E_action_denied = Unable to process requested action. The card is LOCKED. This store does not work with LOCKED cards \
  and the sate is irreversible. For more info, search 'SW 0x6283'.
E_action_not_supported = Requested action not supported (this card life-cycle state is probably LOCKED and the sate is \
  irreversible). For more info, search 'SW 0x6A81'.
E_init_failed = Initialization failed. Card is maybe locked. If so, the store won't support this card.
E_eof = Unexpected end of provided file. Check the file correctness.
E_not_enough_data = Data provided in response is not enough. Please check the requirements for the command.
E_command_not_allowed = The command is not allowed. Check your rights for this command. Maybe you have to authenticate \
  first.
E_generic_invalid_command = The command parameters or data is incorrect.
E_key_usage_error = Key usage error. Check the key types and format.
E_record_not_found = Requested data not found.
E_key_not_found = Requested key not found.
E_length_00 = Correct length for 256 bytes data in array (maximum transfer size) should equal in LE to 0x00.

E_default = Something went wrong. Try to re-start the application. If the problem persists, notify us.
E_default_try_again = Oops, something went wrong. Please, try again after re-plugging the reader/card.


# hints formatted in html-->
E_initialized = Card is in initialized state.
H_initialized = This card has been initialized.
E_secure_state = Card is in secured state.
H_secure_state = <p>This card has been secured. This means that the card has been marked as ready to work in hostile \
  environment. We cannot work with such a card and the transformation process is irreversible.</p>
E_locked = Card is in locked state.
H_locked = <p>Card is in locked state. It means that no management alternations can be performed and no other applet or \
  security domain can be selected - the card can run only one selected applet. We cannot work with such a card and the \
  transformation process is irreversible.</p>
E_terminated = Card is in terminated state.
H_terminated = <p>Card has been terminated. It means that this card will not respond to almost any command and thus the \
  card is useless. Nor we, nor anyone else can work with such a card and the transformation process is irreversible.</p>
E_no_life_state = Card life cycle state not detected.
H_no_life_state = <p>Card life cycle state can tell us whether the card is ready for installing, deleteing and other \
  management, or whether the card is no longer manageable. We were unable to determine this information and therefore \
  we will not support this card to avoid any possible damage. Re-plugging the card could help, as fetching card info \
  might (rarely) fail.</p>
E_authentication = Card authentication failed.
E_master_key_not_found = <p>Master key unknown. We didn't try to authenticate to this card. \
  Modify <b>cards.ini</b> file inside your documents folder: JCAppStore/data/cards.ini. \
  Set <b>key = </b>[put here correct value].</p>
H_authentication = <p>We were unable to guess the correct key (password) for this card. \
  Modify <b>cards.ini</b> file inside your documents folder: JCAppStore/data/cards.ini. \
  Set <b>auth = true</b> and <b>key = </b>[put here correct value].\
  <br /> <b>WARNING:</b> make sure you know the correct key. After several (around 10) incorrect tries, the card \
  will be bricked.</p>
H_not_authenticated = <p>We didn't try to authenticate to this card (auth = false is set). \
  Modify <b>cards.ini</b> file inside your documents folder: JCAppStore/data/cards.ini. \
  Set <b>auth = true</b> and <b>key = </b>[put here correct value].\
  <br /> <b>WARNING:</b> make sure you know the correct key when setting auth = true. \
  After several (around 10) incorrect tries, the card will be bricked.</p>
E_communication = Card detection failed.
H_communication = Re plug the reader or card and try again.
E_generic = The following error has occurred: 
W_internet = <p>Internet connection failed. The store displayed is the last saved store version. The store data might not be accurate.</p>
E_install_not_found = <p>Unable to find requested file for install. Try to re-download the store or choose different version or sdk.</p>
E_pkg_present = Package already present on this card. It can be re-installed using advanced 'force install' option.
E_no_reponse = Card is not responding
E_card_no_response = Communication with card failed. Either the card is not responding or hardware failure occurred. You can try to re-plug the card.
E_invalid_custom_install = Invalid app version or sdk selected for install.
E_no_AID_custom_install = No AID for applet install chosen.
has_keys = Keys 
H_has_keys = If this applet stores private keys\nor other sensitive data.\nIf you keep this checked, the store will\ndisplay \
  warning on attempt to uninstall.

# keywords for search engine-->
install_kwords = install,applet

# hints-->
H_name = The applet or package name.\nThe ID is displayed,\nif not installed from appletStore. 
H_version = Applet version installed, unknown,\nif not installed from appletStore.
H_id = Applet or package unique ID.\nApplet id usually contains a part of it's\nown package ID.
H_type = Each card content consists of several objects:\nSecurity Domains - applets for management.\nFor example, those applets \
  install and delete\nother applets. Issuer SD is a SD uploaded\nby the card issuer.\nApplets - the instances of installed\
  \nsoftware from package.\nPackages - the context for each different\napplet installed.
H_sd_assinged = The security domain assigned\nto this applet.

ini_commentary = #  This file contains list of all the cards parsed by JCAppStore. \n\
  #\n\
  #  Modifying this file is not discouraged, though we stringly recommend\n\
  #  to keep a copy of it in case somehing goes wrong. Also, we are not \n\
  #  responsible for any damage caused to your card, especially allowing \n\
  #  the authentication withou key change.\n\
  #\n\
  #  __________\n\
  #  Field description:\n\
  ###    name\t\t name of the card if known.\n\
  ###    key\t\t master key used for athentication, allowed characters\n\
  #   0..9A..F, must be even length between 32 and 64 characters\n\
  ###    kcv\t\t key check value, not a necessary item, sometimes provided\n\
  #  by vendor\n\
  ###    diversifier\t method to derive all keys needed from the master key,\n\
  #  leave blank if not sure\n\
  ###    auth\t\t whether the app tries to authenticate to this card, do not\n\
  #  change to true without changing the key field to correct value! use\n\
  #  "true" or "false" values only (without the quotes)\n\
  ###    atr\t\t card atr number, we recommend not to change\n\
  ###    cin\t\t card cin number, we recommend not to change\n\
  ###    card_data\t card data description, we recommend not to change\n\
  ###    card_capabilities\t card capabilities description, we recommend\n\
  #  not to change\n\
  ###    key_info\t info about the keys used\n\n\
  #  !!! This file contains list of all the cards parsed by JCAppStore. !!!\n\
  #  !!! Modify only the information block that belongs to the desired card. !!!\n\n\n